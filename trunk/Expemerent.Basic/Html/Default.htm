<html>
<head>
  <title>View (window) events</title>
  <style> 
  
	html 
	{ 
		font:10pt Verdana; 
		overflow:hidden;
    background-color:transparent;
		background-image:url(back.png);
		background-repeat:expand;
		background-position:8px 8px 8px 8px;
	}
	body 
	{ 
		padding:3px;
		margin:0;
		width:100%%; 
		height:100%%;
	}

	#topbar
	{
		flow:horizontal;
		margin-bottom:3px;
	}

	#topbar #window-caption 
	{
		color: #274749;
    background-color: white;
    opacity: 0.75;
		padding:0 4px;
    margin:0 4px;
    height:*;
	}
	#window-content
	{
		background-color:window;
    padding:3px;
		width:100%%; 
		height:100%%; 
	}
	#topbar widget[type="button"] 
	{
		width:1em;
		height:1em;
		background-image:none;
    transition:none;
		padding:1px;
		font-family: marlett;
		font-size:10pt;
		color: #274749;
		border:1px solid #B0CFD1;
		text-align:center;
		vertical-align:center;
		margin:0;
	}
	#topbar widget[type="button"]:hover 
	{
		color:orange;
		border-color:orange;
		background-color:#B0CFD1;
	} 
	#topbar widget[type="button"]:active 
	{
		background-color:#274749;
	} 

	#topbar widget#window-minimize,
	#topbar widget#window-maximize { margin-right:2px; } 

	#topbar widget#window-icon
	{
		foreground-image:url(icon.png);
		foreground-repeat:no-repeat;
		foreground-position:50% 50%;
	}

	#bottombar 
	{
		margin-top:3px;
		flow:horizontal;
	}

	#bottombar #window-corner
	{
	  margin-top:100%%;
		font-family: marlett;
		font-size:10pt;
		color: #274749;
		width:min-intrinsic;
	}

	#bottombar #window-status
	{
		color: #274749;
		font-size:9pt;
    margin:0;
	}
 
  </style>
  <script type="text/tiscript">
  
  if( self.parent )
    return; // loading in the <frame>, don't do the rest. 
    
  // this is root document of the view    

  // setup window, remove standard window frame
  view.frame = false;
    
  // onStateChanged handler of the view object  
  function view.onStateChanged()
  {
    switch( view.state ) 
    {
      case View.WINDOW_MAXIMIZED:  self.select("#window-maximize").text = "2"; break;
      case View.WINDOW_SHOWN:      self.select("#window-maximize").text = "1"; break;
    }
  }
  
  
  </script>
</head>

<body>
	<div id="topbar">
		<widget id="window-icon" type="button"></widget>
		<div id="window-caption">Sciter skinned window sample</div>
		<widget id="window-minimize" type="button">0</widget>
		<widget id="window-maximize" type="button">1</widget>
		<widget id="window-close" type="button" title="Guess what is this button doing?">r</widget>
	</div>
	<div id="window-content">
    <h1>Custom frame (skin) mode demo</h1>
    skin HTML may have following elements defined:
    <ul> 
      <li><b>#window-icon</b> - sys menu area (or window icon)</li>
      <li><b>#window-maximize</b> - maximize window button</li>
      <li><b>#window-minimize</b> - maximize window button</li>
      <li><b>#window-corner</b> - corner resizing grip</li>
      <li><b>#window-caption</b> - caption area</li>
      <li></li>
    </ul>
    All these controls are optional.
    <button>Does nothing</button>
	</div>
	<div id="bottombar">
		<p id="window-status">This is the <i>status</i>...</p>
		<div id="window-corner">o</div>
	</div>
  
</body>
</html>
